BEGIN;

CREATE TABLE IF NOT EXISTS public."__EFMigrationsHistory"
(
    migration_id character varying(150) COLLATE pg_catalog."default" NOT NULL,
    product_version character varying(32) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT pk___ef_migrations_history PRIMARY KEY (migration_id)
);

CREATE TABLE IF NOT EXISTS public.inbox_state
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    message_id uuid NOT NULL,
    consumer_id uuid NOT NULL,
    lock_id uuid NOT NULL,
    row_version bytea,
    received timestamp with time zone NOT NULL,
    receive_count integer NOT NULL,
    expiration_time timestamp with time zone,
    consumed timestamp with time zone,
    delivered timestamp with time zone,
    last_sequence_number bigint,
    CONSTRAINT pk_inbox_state PRIMARY KEY (id),
    CONSTRAINT ak_inbox_state_message_id_consumer_id UNIQUE (message_id, consumer_id)
);

CREATE TABLE IF NOT EXISTS public.order_state
(
    correlation_id uuid NOT NULL,
    order_id uuid NOT NULL,
    basket_id uuid NOT NULL,
    email character varying(255) COLLATE pg_catalog."default",
    current_state text COLLATE pg_catalog."default" NOT NULL,
    total_money numeric(18, 2),
    order_placed_date timestamp with time zone,
    version integer NOT NULL,
    full_name text COLLATE pg_catalog."default",
    place_order_timeout_token_id uuid,
    timeout_retry_count integer NOT NULL DEFAULT 0,
    CONSTRAINT pk_order_state PRIMARY KEY (correlation_id)
);

CREATE TABLE IF NOT EXISTS public.outbox_message
(
    sequence_number bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    enqueue_time timestamp with time zone,
    sent_time timestamp with time zone NOT NULL,
    headers text COLLATE pg_catalog."default",
    properties text COLLATE pg_catalog."default",
    inbox_message_id uuid,
    inbox_consumer_id uuid,
    outbox_id uuid,
    message_id uuid NOT NULL,
    content_type character varying(256) COLLATE pg_catalog."default" NOT NULL,
    message_type text COLLATE pg_catalog."default" NOT NULL,
    body text COLLATE pg_catalog."default" NOT NULL,
    conversation_id uuid,
    correlation_id uuid,
    initiator_id uuid,
    request_id uuid,
    source_address character varying(256) COLLATE pg_catalog."default",
    destination_address character varying(256) COLLATE pg_catalog."default",
    response_address character varying(256) COLLATE pg_catalog."default",
    fault_address character varying(256) COLLATE pg_catalog."default",
    expiration_time timestamp with time zone,
    CONSTRAINT pk_outbox_message PRIMARY KEY (sequence_number)
);

CREATE TABLE IF NOT EXISTS public.outbox_state
(
    outbox_id uuid NOT NULL,
    lock_id uuid NOT NULL,
    row_version bytea,
    created timestamp with time zone NOT NULL,
    delivered timestamp with time zone,
    last_sequence_number bigint,
    CONSTRAINT pk_outbox_state PRIMARY KEY (outbox_id)
);

ALTER TABLE IF EXISTS public.outbox_message
    ADD CONSTRAINT fk_outbox_message_inbox_state_inbox_message_id_inbox_consumer_ FOREIGN KEY (inbox_message_id, inbox_consumer_id)
    REFERENCES public.inbox_state (message_id, consumer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.outbox_message
    ADD CONSTRAINT fk_outbox_message_outbox_state_outbox_id FOREIGN KEY (outbox_id)
    REFERENCES public.outbox_state (outbox_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;

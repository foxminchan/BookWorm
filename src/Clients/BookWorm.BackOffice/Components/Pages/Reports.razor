@page "/reports"
@inject HttpClient HttpClient
@inject ILogger<Reports> Logger

<PageTitle>Reports - BookWorm Admin</PageTitle>

<h1>Reports & Analytics</h1>

<div class="row">
    <div class="col-md-6">
        <div class="card mb-4">
            <div class="card-header">
                <h5>Sales Report</h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <label for="startDate" class="form-label">Start Date</label>
                        <input type="date" class="form-control" id="startDate" />
                    </div>
                    <div class="col-md-6">
                        <label for="endDate" class="form-label">End Date</label>
                        <input type="date" class="form-control" id="endDate" />
                    </div>
                </div>
                <div class="mt-3">
                    <button class="btn btn-primary">Generate Sales Report</button>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="card mb-4">
            <div class="card-header">
                <h5>Inventory Report</h5>
            </div>
            <div class="card-body">
                <p>Generate reports on current inventory levels and stock alerts.</p>
                <button class="btn btn-primary">Generate Inventory Report</button>
                <button class="btn btn-outline-warning ms-2">Low Stock Alert</button>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <h5>Quick Stats</h5>
            </div>
            <div class="card-body">
                @if (isLoading)
                {
                    <div class="d-flex justify-content-center">
                        <div class="spinner-border" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </div>
                }
                else
                {
                    <div class="row">
                        <div class="col-md-3">
                            <div class="text-center">
                                <h3 class="text-primary">@stats.TotalSales.ToString("C")</h3>
                                <p class="text-muted">Total Sales (30 days)</p>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="text-center">
                                <h3 class="text-success">@stats.TotalOrders</h3>
                                <p class="text-muted">Total Orders (30 days)</p>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="text-center">
                                <h3 class="text-warning">@stats.NewCustomers</h3>
                                <p class="text-muted">New Customers (30 days)</p>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="text-center">
                                <h3 class="text-info">@stats.AvgOrderValue.ToString("C")</h3>
                                <p class="text-muted">Average Order Value</p>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<div class="row mt-4">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <h5>Top Selling Books (This Month)</h5>
            </div>
            <div class="card-body">
                @if (topBooks == null)
                {
                    <div class="d-flex justify-content-center">
                        <div class="spinner-border" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </div>
                }
                else
                {
                    <div class="table-responsive">
                        <table class="table table-sm">
                            <thead>
                                <tr>
                                    <th>Rank</th>
                                    <th>Book Title</th>
                                    <th>Sales</th>
                                    <th>Revenue</th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0; i < topBooks.Count; i++)
                                {
                                    var book = topBooks[i];
                                    <tr>
                                        <td>@(i + 1)</td>
                                        <td>@book.Title</td>
                                        <td>@book.UnitsSold</td>
                                        <td>@book.Revenue.ToString("C")</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private bool isLoading = true;
    private StatsDto stats = new();
    private List<TopBookDto>? topBooks;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Simulate loading data
            await Task.Delay(1500);
            
            stats = GetSampleStats();
            topBooks = GetSampleTopBooks();
            
            isLoading = false;
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error loading reports data");
            isLoading = false;
        }
    }

    private static StatsDto GetSampleStats()
    {
        return new StatsDto
        {
            TotalSales = 25847.65m,
            TotalOrders = 342,
            NewCustomers = 67,
            AvgOrderValue = 75.58m
        };
    }

    private static List<TopBookDto> GetSampleTopBooks()
    {
        return new List<TopBookDto>
        {
            new() { Title = "Clean Code", UnitsSold = 45, Revenue = 2069.55m },
            new() { Title = "Design Patterns", UnitsSold = 38, Revenue = 2013.62m },
            new() { Title = "The Pragmatic Programmer", UnitsSold = 42, Revenue = 1805.58m },
            new() { Title = "Refactoring", UnitsSold = 35, Revenue = 1749.65m },
            new() { Title = "Code Complete", UnitsSold = 28, Revenue = 1567.72m }
        };
    }

    private class StatsDto
    {
        public decimal TotalSales { get; set; }
        public int TotalOrders { get; set; }
        public int NewCustomers { get; set; }
        public decimal AvgOrderValue { get; set; }
    }

    private class TopBookDto
    {
        public string Title { get; set; } = string.Empty;
        public int UnitsSold { get; set; }
        public decimal Revenue { get; set; }
    }
}
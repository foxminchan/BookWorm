name: SonarQube Analysis
run-name: SonarQube Analysis - ${{ github.actor }} (${{ github.ref_name }})

on:
  push:
    branches:
      - main
    paths:
      - "src/**"
      - "tests/**"
      - ".github/workflows/sonar.yml"
      - "!src/Aspire/BookWorm.AppHost/Container/**"
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

env:
  JAVA_VERSION: "25"
  GLOBAL_JSON_PATH: ${{ github.workspace }}/global.json
  BUN_VERSION_FILE: ${{ github.workspace }}/.bun-version
  HANG_TIMEOUT: "7m"
  SESSION_TIMEOUT: "15m"

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v5
        with:
          distribution: "temurin"
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v5
        with:
          global-json-file: ${{ env.GLOBAL_JSON_PATH }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: ${{ env.BUN_VERSION_FILE }}

      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarQube Cloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: bash
        run: |
          mkdir -p .sonar/scanner
          dotnet tool update dotnet-sonarscanner --tool-path .sonar/scanner

      - name: Sonarqube Begin
        run: >
          .\.sonar\scanner\dotnet-sonarscanner begin
          /k:"foxminchan_BookWorm"
          /o:"foxminchan"
          /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
          /s:$GITHUB_WORKSPACE/SonarQube.Analysis.xml

      - name: Security Scan
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GITLEAKS_CONFIG: .gitleaks.toml

      - name: Build
        run: dotnet build --configuration Release --no-incremental

      - name: Test
        run: >
          dotnet test
          --configuration Release
          --report-trx
          --coverage
          --coverage-settings Coverage.runsettings
          --results-directory ./test-results
          --github-reporter-style full
          --hangdump --hangdump-timeout ${{ env.HANG_TIMEOUT }}
          --crashdump
          --timeout ${{ env.SESSION_TIMEOUT }}

      - name: Sonarqube End
        run: >
          .\.sonar\scanner\dotnet-sonarscanner end
          /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

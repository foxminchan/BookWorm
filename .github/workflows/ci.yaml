name: BookWorm CI

on: [push, workflow_dispatch]

env:
  DOTNET_VERSION: "9.0.x"

permissions:
  checks: write
  pull-requests: write
  security-events: write
  contents: read
  packages: write

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.sha }}
  cancel-in-progress: true

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: ./.github/actions/setup
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Cache .NET SDK
        uses: actions/cache@v4
        with:
          path: |
            ~/.dotnet
            ~/.nuget/packages
          key: ${{ runner.os }}-dotnet-${{ hashFiles('**/global.json', '**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-dotnet-

  scan:
    name: Scan
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Scan
        uses: ./.github/actions/scan

  format:
    name: Format
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Format
        uses: ./.github/actions/format
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

  style:
    name: Style
    runs-on: ubuntu-latest
    needs: setup
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Style
        uses: ./.github/actions/style
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

  analyzers:
    name: Analyzers
    runs-on: ubuntu-latest
    needs: setup
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Analyzers
        uses: ./.github/actions/analyzers
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [setup, scan, format, style, analyzers]
    timeout-minutes: 20
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build
        uses: ./.github/actions/build
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [setup, scan, format, style, analyzers]
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Test
        uses: ./.github/actions/test
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

  publish:
    name: Publish
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: [build, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Set tag version
        id: set_tag
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "version=latest" >> $GITHUB_OUTPUT
          fi

      - name: Publish API Gateway
        uses: ./.github/actions/publish
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          project-path: "src/BookWorm.Gateway/BookWorm.Gateway.csproj"
          container-repository: "foxminchan/bookworm/gateway"
          container-tag: ${{ steps.set_tag.outputs.version }}

      - name: Publish Basket Service
        uses: ./.github/actions/publish
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          project-path: "src/Services/Basket/BookWorm.Basket/BookWorm.Basket.csproj"
          container-repository: "foxminchan/bookworm/basket"
          container-tag: ${{ steps.set_tag.outputs.version }}

      - name: Publish Catalog Service
        uses: ./.github/actions/publish
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          project-path: "src/Services/Catalog/BookWorm.Catalog/BookWorm.Catalog.csproj"
          container-repository: "foxminchan/bookworm/catalog"
          container-tag: ${{ steps.set_tag.outputs.version }}

      - name: Publish Finance Service
        uses: ./.github/actions/publish
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          project-path: "src/Services/Finance/BookWorm.Finance/BookWorm.Finance.csproj"
          container-repository: "foxminchan/bookworm/finance"
          container-tag: ${{ steps.set_tag.outputs.version }}

      - name: Publish Notification Service
        uses: ./.github/actions/publish
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          project-path: "src/Services/Notification/BookWorm.Notification/BookWorm.Notification.csproj"
          container-repository: "foxminchan/bookworm/notification"
          container-tag: ${{ steps.set_tag.outputs.version }}

      - name: Publish Ordering Service
        uses: ./.github/actions/publish
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          project-path: "src/Services/Ordering/BookWorm.Ordering/BookWorm.Ordering.csproj"
          container-repository: "foxminchan/bookworm/ordering"
          container-tag: ${{ steps.set_tag.outputs.version }}

      - name: Publish Rating Service
        uses: ./.github/actions/publish
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          project-path: "src/Services/Rating/BookWorm.Rating/BookWorm.Rating.csproj"
          container-repository: "foxminchan/bookworm/rating"
          container-tag: ${{ steps.set_tag.outputs.version }}

      - name: Publish Chat Service
        uses: ./.github/actions/publish
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          project-path: "src/Services/Chat/BookWorm.Chat/BookWorm.Chat.csproj"
          container-repository: "foxminchan/bookworm/chat"
          container-tag: ${{ steps.set_tag.outputs.version }}

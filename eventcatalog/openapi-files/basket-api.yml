---
openapi: 3.0.1
info:
  title: Basket Service
  version: 1.0.0
  description: |-
    Basket API for BookWorm
  contact:
    name: Nhan Nguyen
    url: https://github.com/foxminchan
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: http://127.0.0.1:54681
paths:
  "/api/v1/baskets":
    put:
      tags:
        - Basket
      summary: Update a basket
      description: Update a basket if exists, otherwise create a new one
      x-eventcatalog-message-type: command
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateBasketCommand"
        required: true
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                "$ref": "#/components/schemas/HttpValidationProblemDetails"
    get:
      tags:
        - Basket
      summary: Get a basket
      description: Get a basket by id
      x-eventcatalog-message-type: query
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CustomerBasketDto"
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
    delete:
      tags:
        - Basket
      summary: Delete a basket
      description: Delete a basket by id
      x-eventcatalog-message-type: command
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
    post:
      tags:
        - Basket
      summary: Create a basket
      description: Create a new basket
      x-eventcatalog-message-type: command
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateBasketCommand"
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                "$ref": "#/components/schemas/HttpValidationProblemDetails"
components:
  schemas:
    BasketItemDto:
      required:
        - id
        - quantity
      type: object
      properties:
        id:
          type: string
          nullable: true
        quantity:
          type: integer
          format: int32
        name:
          type: string
        price:
          type: number
          format: double
        priceSale:
          type: number
          format: double
    BasketItemRequest:
      required:
        - id
        - quantity
      type: object
      properties:
        id:
          type: string
        quantity:
          type: integer
          format: int32
    CreateBasketCommand:
      required:
        - items
      type: object
      properties:
        items:
          type: array
          items:
            "$ref": "#/components/schemas/BasketItemRequest"
    CustomerBasketDto:
      required:
        - id
        - items
      type: object
      properties:
        id:
          type: string
          nullable: true
        items:
          type: array
          items:
            "$ref": "#/components/schemas/BasketItemDto"
    HttpValidationProblemDetails:
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        status:
          type: integer
          format: int32
        detail:
          type: string
        instance:
          type: string
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        status:
          type: integer
          format: int32
        detail:
          type: string
        instance:
          type: string
    UpdateBasketCommand:
      required:
        - items
      type: object
      properties:
        items:
          type: array
          items:
            "$ref": "#/components/schemas/BasketItemRequest"
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
tags:
  - name: Basket
